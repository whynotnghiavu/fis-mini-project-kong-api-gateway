version: "3.8"

services:
  kong_api_gateway:
    build:
      context: "./kong-api-gateway"
    user: root
    volumes:
      - "./kong-api-gateway/certs:/etc/kong/ssl"
      - "./kong-api-gateway/config/kong.yaml:/etc/kong/kong.yml"
    env_file:
      - .env
    environment:
      KONG_DATABASE: off
      KONG_DECLARATIVE_CONFIG: "/etc/kong/kong.yml"

      KONG_SSL: "on"
      KONG_SSL_CERT: /etc/kong/ssl/localhost.crt
      KONG_SSL_CERT_KEY: /etc/kong/ssl/localhost.key

      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    ports:
      - "8001:8001"
      - "8443:8443"

  microservices_mysql:
    extends:
      file: docker-compose.base.yml
      service: microservices_mysql
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"

  microservices_auth:
    extends:
      file: docker-compose.base.yml
      service: microservices_template
    build:
      context: "./microservices/auth"
    volumes:
      - "./microservices/auth:/services"
    environment:
      NAME_SERVICE: microservices_auth

  microservices_hello:
    extends:
      file: docker-compose.base.yml
      service: microservices_template
    build:
      context: "./microservices/hello"
    volumes:
      - "./microservices/hello:/services"
    environment:
      NAME_SERVICE: microservices_hello

  microservices_user_python:
    extends:
      file: docker-compose.base.yml
      service: microservices_template
    build:
      context: "./microservices/user_python"
    volumes:
      - "./microservices/user_python:/services"
    environment:
      NAME_SERVICE: microservices_user

  microservices_user_javascript:
    extends:
      file: docker-compose.base.yml
      service: microservices_template
    build:
      context: "./microservices/user_javascript"
    volumes:
      - "./microservices/user_javascript:/services"
    environment:
      NAME_SERVICE: microservices_user

volumes:
  data_microservices_mysql:
